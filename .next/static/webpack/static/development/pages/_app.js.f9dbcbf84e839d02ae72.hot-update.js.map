{"version":3,"file":"static/webpack/static/development/pages/_app.js.f9dbcbf84e839d02ae72.hot-update.js","sources":["webpack:///./lib/init-apollo.js"],"sourcesContent":["import { ApolloClient, InMemoryCache, HttpLink } from 'apollo-boost'\nimport fetch from 'isomorphic-unfetch'\n\nlet apolloClient = null\n\n// Polyfill fetch() on the server (used by apollo-client)\nif (!process.browser) {\n  global.fetch = fetch\n}\n\nfunction create (initialState) {\n  // Check out https://github.com/zeit/next.js/pull/4611 if you want to use the AWSAppSyncClient\n  return new ApolloClient({\n    connectToDevTools: process.browser,\n    ssrMode: !process.browser, // Disables forceFetch on the server (so queries are only run once)\n    link: new HttpLink({\n      uri: 'https://strapi.hulea.org/webs', // Server URL (must be absolute)\n      credentials: 'same-origin' // Additional fetch() options like `credentials` or `headers`\n    }),\n    cache: new InMemoryCache().restore(initialState || {})\n  })\n}\n\nexport default function initApollo (initialState) {\n  console.log(initialState)\n  // Make sure to create a new client for every server-side request so that data\n  // isn't shared between connections (which would be bad)\n  if (!process.browser) {\n    return create(initialState)\n  }\n\n  // Reuse client on the client-side\n  if (!apolloClient) {\n    apolloClient = create(initialState)\n  }\n\n  return apolloClient\n}\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA,aAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAHA;AAIA;AAPA;AASA;AACA;AACA;AACA;AAEA;AACA;AAAA,eAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;A","sourceRoot":""}