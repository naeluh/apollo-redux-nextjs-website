{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/App.js","webpack:///./components/ErrorMessage.js","webpack:///./components/Header.js","webpack:///./components/PostList.js","webpack:///./components/PostUpvoter.js","webpack:///./components/Submit.js","webpack:///./pages/index.js","webpack:///external \"graphql-tag\"","webpack:///external \"next/link\"","webpack:///external \"next/router\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","export default ({ children }) => (\n  <main>\n    {children}\n    <style jsx global>{`\n      * {\n        font-family: Menlo, Monaco, 'Lucida Console', 'Liberation Mono',\n          'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New',\n          monospace, serif;\n      }\n      body {\n        margin: 0;\n        padding: 25px 50px;\n      }\n      a {\n        color: #22bad9;\n      }\n      p {\n        font-size: 14px;\n        line-height: 24px;\n      }\n      article {\n        margin: 0 auto;\n        max-width: 650px;\n      }\n      button {\n        align-items: center;\n        background-color: #22bad9;\n        border: 0;\n        color: white;\n        display: flex;\n        padding: 5px 7px;\n      }\n      button:active {\n        background-color: #1b9db7;\n        transition: background-color 0.3s;\n      }\n      button:focus {\n        outline: none;\n      }\n    `}</style>\n  </main>\n)\n","export default ({ message }) => (\n  <aside>\n    {message}\n    <style jsx>{`\n      aside {\n        padding: 1.5em;\n        font-size: 14px;\n        color: white;\n        background-color: red;\n      }\n    `}</style>\n  </aside>\n)\n","import Link from 'next/link'\nimport { withRouter } from 'next/router'\n\nconst Header = ({ router: { pathname } }) => (\n  <header>\n    <Link prefetch href='/'>\n      <a className={pathname === '/' ? 'is-active' : ''}>Home</a>\n    </Link>\n    <Link prefetch href='/about'>\n      <a className={pathname === '/about' ? 'is-active' : ''}>About</a>\n    </Link>\n    <style jsx>{`\n      header {\n        margin-bottom: 25px;\n      }\n      a {\n        font-size: 14px;\n        margin-right: 15px;\n        text-decoration: none;\n      }\n      .is-active {\n        text-decoration: underline;\n      }\n    `}</style>\n  </header>\n)\n\nexport default withRouter(Header)\n","import { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport ErrorMessage from './ErrorMessage'\nimport PostUpvoter from './PostUpvoter'\n\nexport const allPostsQuery = gql`\n  query {\n    webs {\n      Title\n      Image {\n        url\n        ext\n        provider\n        size\n      }\n      Description\n      Data\n      URL\n    }\n  }\n`\nexport const allPostsQueryVars = {\n  skip: 0,\n  first: 10\n}\n\nexport default function PostList () {\n  return (\n    <Query query={allPostsQuery} variables={allPostsQueryVars}>\n      {({ loading, error, data: { webs }, fetchMore }) => {\n        if (error) return <ErrorMessage message='Error loading posts.' />\n        if (loading) return <div>Loading</div>\n\n        console.log(webs)\n\n        const areMorePosts = webs.length\n        return (\n          <section>\n            <ul>\n              {webs.map((post, index) => (\n                <li key={post.id}>\n                  <div>\n                    <span>{index + 1}. </span>\n                    <a href={post.URL}>{post.Title}</a>\n                  </div>\n                </li>\n              ))}\n            </ul>\n            {areMorePosts ? (\n              <button onClick={() => loadMorePosts(allPosts, fetchMore)}>\n                {' '}\n                {loading ? 'Loading...' : 'Show More'}{' '}\n              </button>\n            ) : (\n              ''\n            )}\n            <style jsx>{`\n              section {\n                padding-bottom: 20px;\n              }\n              li {\n                display: block;\n                margin-bottom: 10px;\n              }\n              div {\n                align-items: center;\n                display: flex;\n              }\n              a {\n                font-size: 14px;\n                margin-right: 10px;\n                text-decoration: none;\n                padding-bottom: 0;\n                border: 0;\n              }\n              span {\n                font-size: 14px;\n                margin-right: 5px;\n              }\n              ul {\n                margin: 0;\n                padding: 0;\n              }\n              button:before {\n                align-self: center;\n                border-style: solid;\n                border-width: 6px 4px 0 4px;\n                border-color: #ffffff transparent transparent transparent;\n                content: '';\n                height: 0;\n                margin-right: 5px;\n                width: 0;\n              }\n            `}</style>\n          </section>\n        )\n      }}\n    </Query>\n  )\n}\n\nfunction loadMorePosts (allPosts, fetchMore) {\n  fetchMore({\n    variables: {\n      skip: allPosts.length\n    },\n    updateQuery: (previousResult, { fetchMoreResult }) => {\n      if (!fetchMoreResult) {\n        return previousResult\n      }\n      return Object.assign({}, previousResult, {\n        // Append the new posts results to the old one\n        allPosts: [...previousResult.allPosts, ...fetchMoreResult.allPosts]\n      })\n    }\n  })\n}\n","import React from 'react'\nimport { ApolloConsumer } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nexport default function PostUpvoter ({ votes, id }) {\n  return (\n    <ApolloConsumer>\n      {client => (\n        <button onClick={() => upvotePost(votes, id, client)}>\n          {votes}\n          <style jsx>{`\n            button {\n              background-color: transparent;\n              border: 1px solid #e4e4e4;\n              color: #000;\n            }\n            button:active {\n              background-color: transparent;\n            }\n            button:before {\n              align-self: center;\n              border-color: transparent transparent #000000 transparent;\n              border-style: solid;\n              border-width: 0 4px 6px 4px;\n              content: '';\n              height: 0;\n              margin-right: 5px;\n              width: 0;\n            }\n          `}</style>\n        </button>\n      )}\n    </ApolloConsumer>\n  )\n}\n\nfunction upvotePost (votes, id, client) {\n  client.mutate({\n    mutation: gql`\n      mutation updatePost($id: ID!, $votes: Int) {\n        updatePost(id: $id, votes: $votes) {\n          id\n          __typename\n          votes\n        }\n      }\n    `,\n    variables: {\n      id,\n      votes: votes + 1\n    },\n    optimisticResponse: {\n      __typename: 'Mutation',\n      updatePost: {\n        __typename: 'Post',\n        id,\n        votes: votes + 1\n      }\n    }\n  })\n}\n","import { ApolloConsumer } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport { allPostsQuery, allPostsQueryVars } from './PostList'\n\nexport default function Submit () {\n  return (\n    <ApolloConsumer>\n      {client => (\n        <form onSubmit={event => handleSubmit(event, client)}>\n          <h1>Submit</h1>\n          <input placeholder='title' name='title' type='text' required />\n          <input placeholder='url' name='url' type='url' required />\n          <button type='submit'>Submit</button>\n          <style jsx>{`\n            form {\n              border-bottom: 1px solid #ececec;\n              padding-bottom: 20px;\n              margin-bottom: 20px;\n            }\n            h1 {\n              font-size: 20px;\n            }\n            input {\n              display: block;\n              margin-bottom: 10px;\n            }\n          `}</style>\n        </form>\n      )}\n    </ApolloConsumer>\n  )\n}\n\nfunction handleSubmit (event, client) {\n  event.preventDefault()\n  const form = event.target\n  const formData = new window.FormData(form)\n  const title = formData.get('title')\n  const url = formData.get('url')\n  form.reset()\n\n  client.mutate({\n    mutation: gql`\n      mutation createPost($title: String!, $url: String!) {\n        createPost(title: $title, url: $url) {\n          id\n          title\n          votes\n          url\n          createdAt\n        }\n      }\n    `,\n    variables: { title, url },\n    update: (proxy, { data: { createPost } }) => {\n      const data = proxy.readQuery({\n        query: allPostsQuery,\n        variables: allPostsQueryVars\n      })\n      proxy.writeQuery({\n        query: allPostsQuery,\n        data: {\n          ...data,\n          allPosts: [createPost, ...data.allPosts]\n        },\n        variables: allPostsQueryVars\n      })\n    }\n  })\n}\n","import App from '../components/App'\nimport Header from '../components/Header'\nimport Submit from '../components/Submit'\nimport PostList from '../components/PostList'\n\nexport default () => (\n  <App>\n    <Header />\n    <Submit />\n    <PostList />\n  </App>\n)\n","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/link\");","module.exports = require(\"next/router\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AADA;AACA;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AAEA;AAgcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpHA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AA2BA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAHA;AAFA;AAdA;AAuBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AADA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AAFA;AAIA;AANA;AAQA;AA1BA;AA4BA;;;;;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;;;;;;;;;;;;;;;;;;;;;;;ACLA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}